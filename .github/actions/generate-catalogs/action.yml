name: Generate Image Catalogs
description: Generate Image Catalogs
inputs:
  registry:
    description: "The registry to interrogate"
    required: false
    type: string
  image-types:
    description: "Image types to retrieve - space separated values"
    required: false
    type: string
  distributions:
    description: "OS distributions to retrieve - space separated values"
    required: false
    type: string
  regex:
    description: "The regular expression used to retrieve container images"
    required: false
    type: string
  output-dir:
    description: "The path to output directory"
    required: false
    type: string
    default: "."

runs:
  using: composite
  steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        repository: cloudnative-pg/postgres-containers
        ref: ${{ github.action_ref }}
        path: catalog-generator
        sparse-checkout-cone-mode: false
        sparse-checkout: |
          .github/catalogs_generator.py

    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
      with:
        python-version: 3.13

    - name: Install Python dependencies
      shell: bash
      run: |
        pip install packaging==25.0 PyYAML==6.0.2

    - name: Generate catalogs
      shell: bash
      run: |
        python catalog-generator/.github/catalogs_generator.py \
          ${{ inputs.registry && format('--registry "{0}"', inputs.registry) || '' }} \
          ${{ inputs.image-types && format('--image-types "{0}"', inputs.image-types) || '' }} \
          ${{ inputs.distributions && format('--distributions "{0}"', inputs.distributions) || '' }} \
          ${{ inputs.regex && format('--regex "{0}"', inputs.regex) || '' }} \
          --output-dir ${{ inputs.output-dir }}
